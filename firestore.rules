rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    // Users collection
    match /users/{userId} {
      allow read: if isOwner(userId);
      allow create: if isAuthenticated() && request.auth.uid == userId;
      allow update: if isOwner(userId);
      allow delete: if false; // Prevent deletion
      
      // Mood entries subcollection
      match /moodEntries/{entryId} {
        allow read, write: if isOwner(userId);
      }
    }
    
    // Exercises - public read, admin write
    match /exercises/{exerciseId} {
      allow read: if isAuthenticated();
      allow write: if false; // Admin only via Functions
    }
    
    // Exercise completions
    match /exerciseCompletions/{userId}/sessions/{sessionId} {
      allow read, write: if isOwner(userId);
    }
    
    // Chat sessions
    match /chatSessions/{userId}/messages/{messageId} {
      allow read, write: if isOwner(userId);
    }
    
    // Community posts
    match /community/posts/{postId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if isAuthenticated() && 
        (resource.data.authorId == request.auth.uid || 
         request.resource.data.keys().hasOnly(['likes', 'replyCount']));
      
      match /replies/{replyId} {
        allow read: if isAuthenticated();
        allow create: if isAuthenticated();
        allow update: if isAuthenticated() && resource.data.authorId == request.auth.uid;
      }
    }
    
    // Crisis interventions - user read only
    match /crisisInterventions/{interventionId} {
      allow read: if isAuthenticated() && resource.data.userId == request.auth.uid;
      allow write: if false; // Functions only
    }
    
    // Analytics - admin only
    match /analytics/{document=**} {
      allow read: if false;
      allow write: if false; // Functions only
    }
    
    // Notifications
    match /notifications/{userId}/queue/{notificationId} {
      allow read: if isOwner(userId);
      allow write: if false; // Functions only
    }
  }
}
